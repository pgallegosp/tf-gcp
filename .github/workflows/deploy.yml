name: Deploy GKE Cluster

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Actions'
      uses: actions/checkout@v2

    - name: Autenticación en GCP
      run: |
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        echo "GOOGLE_APPLICATION_CREDENTIALS=gcp-key.json" >> $GITHUB_ENV

    - name: Verificar credenciales
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS: [$GOOGLE_APPLICATION_CREDENTIALS]"
        ls -l $(pwd)/gcp-key.json
        cat gcp-key.json | jq .client_email  # Para ver si el JSON es válido
        gcloud auth list
        gcloud config get-value project

    - name: Verificar clave JSON
      run: |
        ls -l gcp-key.json
        cat gcp-key.json | jq .

    - name: Configurar Proyecto GCP
      run: |
        export PROJECT_ID=$(gcloud config get-value project)
        echo "GOOGLE_CLOUD_PROJECT=$PROJECT_ID" >> $GITHUB_ENV
        echo "TF_VAR_project_id=$PROJECT_ID" >> $GITHUB_ENV  # Opcional si Terraform usa una variable

    - name: Instalar Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7  # Asegúrate de usar la versión adecuada

#    - name: 'Export Google Cloud Credentials'
#      run: echo "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcloud-credentials.json

#    - name: 'Check Google Cloud Credentials File'
#      run: cat $HOME/gcloud-credentials.json

    - name: 'Check Files'
      run: pwd; ls -ltrhas

#    - name: 'Print Environment Variables'
#      run: env | grep GOOGLE_APPLICATION_CREDENTIALS

#    - name: 'Set GOOGLE_APPLICATION_CREDENTIALS Environment Variable'
#      run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud-credentials.json" >> $GITHUB_ENV

#    - name: 'Verify Environment Variable'
#      run: echo $GOOGLE_APPLICATION_CREDENTIALS

#    - name: 'Setup Terraform'
#      uses: hashicorp/setup-terraform@v1
#      with:
#        terraform_version: 1.5.0

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Plan'
      run: terraform plan -var-file="terraform.tfvars"

    - name: 'Terraform Apply'
      run: terraform apply -var-file="terraform.tfvars" -auto-approve

#    - name: 'Save Kubeconfig Cluster 1'
#      run: echo "${{ steps.apply.outputs.kubeconfig_cluster1 }}" > $HOME/.kube/config_cluster1
#      shell: bash
#
#    - name: 'Save Kubeconfig Cluster 2'
#      run: echo "${{ steps.apply.outputs.kubeconfig_cluster2 }}" > $HOME/.kube/config_cluster2
#      shell: bash
#
#    - name: 'Upload Kubeconfig Cluster 1'
#      uses: actions/upload-artifact@v3
#      with:
#        name: kubeconfig_cluster1
#        path: $HOME/.kube/config_cluster1
#
#    - name: 'Upload Kubeconfig Cluster 2'
#      uses: actions/upload-artifact@v3
#      with:
#        name: kubeconfig_cluster2
#        path: $HOME/.kube/config_cluster2
